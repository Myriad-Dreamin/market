<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="d33caeea-6f6c-4429-8ab1-6d64520d9a9b" name="Default Changelist" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/init-package-probe.go" beforeDir="false" afterPath="$PROJECT_DIR$/init-package-probe.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/abstract-test/interface.go.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/abstract-test/interface.go.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/crypto/password.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/crypto/password.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/crypto/password_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/crypto/password_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/generate/doc-gen/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/generate/doc-gen/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/generate/doc-gen/main_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/generate/doc-gen/main_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/generate/doc-gen/process-result.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/generate/doc-gen/process-result.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/generate/keep.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/generate/keep.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/generate/test-gen/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/generate/test-gen/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/hook/hook.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/hook/hook.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/keep.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/keep.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/logger/zaplogger.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/logger/zaplogger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/context-record.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/context-record.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/json.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/json.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/json_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/json_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/map-stream.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/map-stream.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/protobuf.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/protobuf.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/protobuf_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/protobuf_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/response.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/response.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/results.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/results.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/serialize-protocol.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/serialize-protocol.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/stream.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/stream.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/xml.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/xml.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/xml_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/xml_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/mock/yaml.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/mock/yaml.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/module/module.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/module/module.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/module/module_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/module/module_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/plugin/plugin.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/plugin/plugin.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/rbac/rbac-file.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/rbac/rbac-file.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/rbac/rbac-file_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/rbac/rbac-file_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/rbac/rbac-gorm.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/rbac/rbac-gorm.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/rbac/rbac.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/rbac/rbac.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/rbac/regep_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/rbac/regep_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/sugar/tracer.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/sugar/tracer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/sugar/with-file.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/sugar/with-file.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/lib/sugar/with-file_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/sugar/with-file_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/decide.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/decide.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/filter.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/filter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/goods.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/goods.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/instance.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/instance.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/needs.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/needs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/object.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/object.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/register.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/register.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/stat-fee.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/stat-fee.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/db-layer/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/db-layer/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/filter.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/filter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/goods.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/goods.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/needs.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/needs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/object.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/object.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/orm.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/orm.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/oss/oss.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/oss/oss.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/oss/rocksdb_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/lib/oss/rocksdb_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/redis.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/redis.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/sp-layer/enforcer.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/sp-layer/enforcer.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/sp-layer/needs.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/sp-layer/needs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/sp-layer/provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/sp-layer/provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/sp-layer/redis.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/sp-layer/redis.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/sp-layer/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/sp-layer/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/stat-fee.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/stat-fee.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/model/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/model/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/action.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/action.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/goods-router.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/goods-router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/needs-router.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/needs-router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/nop-validator.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/nop-validator.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/object-router.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/object-router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/root-router.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/root-router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/router/user-router.go" beforeDir="false" afterPath="$PROJECT_DIR$/router/user-router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/logger.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/logger.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/middleware.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/middleware.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/mock.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/mock.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/router.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/router.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/server.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/server.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/base-service/crud.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/base-service/crud.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/base-service/list.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/base-service/list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/gin-helper/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/gin-helper/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods-service/filter-on.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods-service/filter-on.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods-service/list-filter.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods-service/list-filter.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods/delete.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods/delete.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods/get.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods/get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods/gulp.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods/gulp.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods/list.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods/list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods/post.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods/post.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods/register-docs.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods/register-docs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/goods/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/goods/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/needs.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/needs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/needs/get.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/needs/get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/needs/list.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/needs/list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/needs/post.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/needs/post.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/needs/register-docs.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/needs/register-docs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/needs/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/needs/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/object/get.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/object/get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/object/list.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/object/list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/object/post.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/object/post.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/object/put.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/object/put.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/object/register-docs.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/object/register-docs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/object/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/object/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/provider.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/provider.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/register-docs.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/register-docs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/statistic/show.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/statistic/show.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/buy.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/buy.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/change-password.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/change-password.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/get.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/get.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/interface_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/interface_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/post.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/post.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/put.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/put.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/register-docs.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/register-docs.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/register.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/register.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/sell.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/sell.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/service.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/service.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/tester/tester.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/tester/tester.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/tester_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/tester_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/user-get-list_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/user-get-list_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/user-register-login_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/user-register-login_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/user_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/test/user_test.go" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageOptionsProvider">
    <option name="myAddOrReplace" value="1" />
  </component>
  <component name="CoverageViewManager">
    <option name="myElementSize" value="214" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_DATA_SOURCES" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <option name="HIDDEN_KINDS">
      <set />
    </option>
    <expand />
    <select />
  </component>
  <component name="FavoritesManager">
    <favorites_list name="market" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="D:\Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1SYGwJhsvxgZQBLLm3LCF9EOuv4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="PropertiesComponent">
    <property name="ASKED_ADD_EXTERNAL_FILES" value="true" />
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../functional-go" />
    <property name="node.js.detected.package.stylelint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.path.for.package.stylelint" value="project" />
    <property name="node.js.path.for.package.tslint" value="project" />
    <property name="node.js.selected.package.stylelint" value="" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="com.jetbrains.python.configuration.PyActiveSdkModuleConfigurable" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\lib" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\interface" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\lib\logger\bufferpool" />
      <recent name="$PROJECT_DIR$/lib/traits" />
      <recent name="$PROJECT_DIR$/lib/hook" />
    </key>
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/lib/mock" />
      <recent name="$PROJECT_DIR$/lib/mock/response" />
      <recent name="$PROJECT_DIR$/lib/abstract-test" />
      <recent name="$PROJECT_DIR$/lib/trace.go" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/model/db-layer" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\service\user" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\service\goods" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\service\needs" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\model\db-layer" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.go test test">
    <configuration name="TestFromGinResults in github.com/Myriad-Dreamin/market/lib/generate/doc-gen" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/lib/generate/doc-gen" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/Myriad-Dreamin/market/lib/generate/doc-gen" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestFromGinResults$" />
      <method v="2" />
    </configuration>
    <configuration name="TestFuncDescription in github.com/Myriad-Dreamin/market/lib/generate/doc-gen" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/lib/generate/doc-gen" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/Myriad-Dreamin/market/lib/generate/doc-gen" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestFuncDescription$" />
      <method v="2" />
    </configuration>
    <configuration name="Test_processResultResult in github.com/Myriad-Dreamin/market/lib/generate/doc-gen" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/lib/generate/doc-gen" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/Myriad-Dreamin/market/lib/generate/doc-gen" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^Test_processResultResult$" />
      <method v="2" />
    </configuration>
    <configuration name="go test doc-gen" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/lib/generate/doc-gen" />
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <package value="github.com/Myriad-Dreamin/market" />
      <directory value="$PROJECT_DIR$/lib/generate/doc-gen" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go test test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/test" />
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <package value="github.com/Myriad-Dreamin/market" />
      <directory value="$PROJECT_DIR$/test" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test test" />
        <item itemvalue="Go Test.go test doc-gen" />
        <item itemvalue="Go Test.TestFuncDescription in github.com/Myriad-Dreamin/market/lib/generate/doc-gen" />
        <item itemvalue="Go Test.Test_processResultResult in github.com/Myriad-Dreamin/market/lib/generate/doc-gen" />
        <item itemvalue="Go Test.TestFromGinResults in github.com/Myriad-Dreamin/market/lib/generate/doc-gen" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.py" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>https://goproxy.io</proxy>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/config/config_test.go</url>
          <line>10</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/market$register_test_go.out" NAME="register_test.go Coverage Results" MODIFIED="1572427931979" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestNotStruct_in_github_com_Myriad_Dreamin_market_mock.out" NAME="TestNotStruct in github.com/Myriad-Dreamin/market/mock Coverage Results" MODIFIED="1572426011871" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_github_com_Myriad_Dreamin_market_crypto.out" NAME="go test github.com/Myriad-Dreamin/market/crypto Coverage Results" MODIFIED="1572424283684" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_github_com_Myriad_Dreamin_market_config.out" NAME="go test github.com/Myriad-Dreamin/market/config Coverage Results" MODIFIED="1572417095442" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestJSON_in_github_com_Myriad_Dreamin_market_config.out" NAME="TestJSON in github.com/Myriad-Dreamin/market/config Coverage Results" MODIFIED="1572416295765" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_test.out" NAME="go test test Coverage Results" MODIFIED="1572687636036" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_mock.out" NAME="go test mock Coverage Results" MODIFIED="1572427181686" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_user.out" NAME="go test user Coverage Results" MODIFIED="1572434171704" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestFilter_in_github_com_Myriad_Dreamin_market_model_db_layer_general_dao.out" NAME="TestFilter in github.com/Myriad-Dreamin/market/model/db-layer/general-dao Coverage Results" MODIFIED="1572278128524" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestProtoMessage_Serialize_in_github_com_Myriad_Dreamin_market_mock.out" NAME="TestProtoMessage_Serialize in github.com/Myriad-Dreamin/market/mock Coverage Results" MODIFIED="1572426707570" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestLoad_in_github_com_Myriad_Dreamin_market_config.out" NAME="TestLoad in github.com/Myriad-Dreamin/market/config Coverage Results" MODIFIED="1572416958546" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestJSON_Serialize_in_github_com_Myriad_Dreamin_market_mock.out" NAME="TestJSON_Serialize in github.com/Myriad-Dreamin/market/mock Coverage Results" MODIFIED="1572427078572" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>