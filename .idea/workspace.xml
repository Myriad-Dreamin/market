<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="d33caeea-6f6c-4429-8ab1-6d64520d9a9b" name="Default Changelist" comment="">
      <change afterPath="$PROJECT_DIR$/config/static_config_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/json.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/json_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/map-stream.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/protobuf.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/protobuf_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/stream.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/xml.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/xml_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/mock/yaml.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/service/goods-service/list-filter.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/tester.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/user/get_test.go" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/test/user/register_login_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/config.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/config_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/config_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.mod" beforeDir="false" afterPath="$PROJECT_DIR$/go.mod" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/go.sum" beforeDir="false" afterPath="$PROJECT_DIR$/go.sum" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/mock/serialize-protocol.go" beforeDir="false" afterPath="$PROJECT_DIR$/mock/serialize-protocol.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/server/mock.go" beforeDir="false" afterPath="$PROJECT_DIR$/server/mock.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/service/user/login.go" beforeDir="false" afterPath="$PROJECT_DIR$/service/user/login.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/test/user/register_test.go" beforeDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="CoverageOptionsProvider">
    <option name="myAddOrReplace" value="1" />
  </component>
  <component name="CoverageViewManager">
    <option name="myElementSize" value="246" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" path="D:\Go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1SYGwJhsvxgZQBLLm3LCF9EOuv4" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="SHARE_PROJECT_CONFIGURATION_FILES" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="go.tried.to.enable.integration.vgo.integrator" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../dorm" />
    <property name="settings.editor.selected.configurable" value="preferences.editor" />
  </component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/mock-protocol" />
      <recent name="$PROJECT_DIR$/mock-protocol/stream.go" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\model\sp-layer" />
    </key>
    <key name="GoMoveDeclarationDialog.RECENT_KEY">
      <recent name="$PROJECT_DIR$/lib/trace.go" />
    </key>
    <key name="CopyFile.RECENT_KEYS">
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\model\db-layer" />
      <recent name="$PROJECT_DIR$/test/user" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market\service\user" />
      <recent name="E:\project\go\src\github.com\Myriad-Dreamin\market" />
    </key>
  </component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Go Test.go test user">
    <configuration name="TestJSON_Serialize in github.com/Myriad-Dreamin/market/mock" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/mock" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/Myriad-Dreamin/market/mock" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestJSON_Serialize$" />
      <method v="2" />
    </configuration>
    <configuration name="TestProtoMessage_Serialize in github.com/Myriad-Dreamin/market/mock" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/mock" />
      <framework value="gotest" />
      <kind value="PACKAGE" />
      <package value="github.com/Myriad-Dreamin/market/mock" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/" />
      <pattern value="^TestProtoMessage_Serialize$" />
      <method v="2" />
    </configuration>
    <configuration name="go test mock" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/mock" />
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <package value="github.com/Myriad-Dreamin/market" />
      <directory value="$PROJECT_DIR$/mock" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="go test user" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/test/user" />
      <framework value="gotest" />
      <kind value="DIRECTORY" />
      <package value="github.com/Myriad-Dreamin/market" />
      <directory value="$PROJECT_DIR$/test/user" />
      <filePath value="$PROJECT_DIR$/" />
      <method v="2" />
    </configuration>
    <configuration name="register_test.go" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="market" />
      <working_directory value="$PROJECT_DIR$/test/user" />
      <framework value="gotest" />
      <kind value="FILE" />
      <package value="github.com/Myriad-Dreamin/market" />
      <directory value="$PROJECT_DIR$/" />
      <filePath value="$PROJECT_DIR$/test/user/register_test.go" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Test.go test user" />
        <item itemvalue="Go Test.register_test.go" />
        <item itemvalue="Go Test.go test mock" />
        <item itemvalue="Go Test.TestJSON_Serialize in github.com/Myriad-Dreamin/market/mock" />
        <item itemvalue="Go Test.TestProtoMessage_Serialize in github.com/Myriad-Dreamin/market/mock" />
      </list>
    </recent_temporary>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="UnknownFeatures">
    <option featureType="com.intellij.fileTypeFactory" implementationName="*.conf" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State>
              <option name="COLUMN_ORDER" />
            </State>
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
    <proxy>https://goproxy.io</proxy>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/config/config_test.go</url>
          <line>10</line>
          <option name="timeStamp" value="6" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/market$TestNotStruct_in_github_com_Myriad_Dreamin_market_mock.out" NAME="TestNotStruct in github.com/Myriad-Dreamin/market/mock Coverage Results" MODIFIED="1572426011871" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$register_test_go.out" NAME="register_test.go Coverage Results" MODIFIED="1572427931979" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_github_com_Myriad_Dreamin_market_crypto.out" NAME="go test github.com/Myriad-Dreamin/market/crypto Coverage Results" MODIFIED="1572424283684" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_github_com_Myriad_Dreamin_market_config.out" NAME="go test github.com/Myriad-Dreamin/market/config Coverage Results" MODIFIED="1572417095442" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestJSON_in_github_com_Myriad_Dreamin_market_config.out" NAME="TestJSON in github.com/Myriad-Dreamin/market/config Coverage Results" MODIFIED="1572416295765" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_mock.out" NAME="go test mock Coverage Results" MODIFIED="1572427181686" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$go_test_user.out" NAME="go test user Coverage Results" MODIFIED="1572429772055" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestFilter_in_github_com_Myriad_Dreamin_market_model_db_layer_general_dao.out" NAME="TestFilter in github.com/Myriad-Dreamin/market/model/db-layer/general-dao Coverage Results" MODIFIED="1572278128524" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestLoad_in_github_com_Myriad_Dreamin_market_config.out" NAME="TestLoad in github.com/Myriad-Dreamin/market/config Coverage Results" MODIFIED="1572416958546" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestProtoMessage_Serialize_in_github_com_Myriad_Dreamin_market_mock.out" NAME="TestProtoMessage_Serialize in github.com/Myriad-Dreamin/market/mock Coverage Results" MODIFIED="1572426707570" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/market$TestJSON_Serialize_in_github_com_Myriad_Dreamin_market_mock.out" NAME="TestJSON_Serialize in github.com/Myriad-Dreamin/market/mock Coverage Results" MODIFIED="1572427078572" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>